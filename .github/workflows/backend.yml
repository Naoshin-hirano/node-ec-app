name: Deploy

on:
    push:
        branches: [main]

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Install Heroku CLI
              run: |
                  curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
                  heroku container:login
              env:
                  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

            - name: Checkout
              uses: actions/checkout@v3

            - name: Build
              uses: gonuit/heroku-docker-deploy@v1.3.3
              with:
                  email: ${{ secrets.HEROKU_EMAIL }}
                  heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
                  heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
                  dockerfile_directory: ./backend/
                  dockerfile_name: Dockerfile
                  docker_options: "--no-cache"
                  process_type: web

            - name: Get Heroku PostgreSQL URL
              id: heroku-db
              run: |
                  HEROKU_DB_URL=$(heroku config:get DATABASE_URL -a your-heroku-app-name)
                  echo "DATABASE_URL=${HEROKU_DB_URL}" >> $GITHUB_ENV

            - name: Npm Install in Heroku DB
              env:
                  DATABASE_URL: ${{ vars.DATABASE_URL }}
              working-directory: ./backend
              run: npm install

            - name: Run TypeORM migrations on Heroku DB
              env:
                  DATABASE_URL: ${{ vars.DATABASE_URL }}
              working-directory: ./backend
              run: npx typeorm-ts-node-commonjs migration:run -d src/database/database-source.ts
